buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.javamodularity:moduleplugin:1.6.0'
        classpath 'io.freefair.gradle:lombok-plugin:5.0.0-rc6'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '4.0.1'
    id 'org.ajoberstar.reckon' version '0.12.0'
    id 'org.sonarqube' version '2.8'
    id 'org.ajoberstar.git-publish' version '3.0.0-rc.1'

    //for top level project
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}

group = 'com.github.moaxcp.graphwm'
description = 'A tiling window manager which uses a graph to make tiling easy.'

reckon {
    scopeFromProp()
    snapshotFromProp()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor "io.micronaut.configuration:micronaut-picocli"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation 'com.github.moaxcp:escher:0.4.0'

    implementation "io.micronaut:micronaut-runtime"
    implementation "info.picocli:picocli"
    implementation "io.micronaut.configuration:micronaut-picocli"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "io.micronaut:micronaut-inject-java"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly
mainClassName = "com.github.moaxcp.graphwm.WindowManagerCommand"

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('--enable-preview', '-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'org.javamodularity.moduleplugin'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'checkstyle'

    repositories {
        mavenCentral()
        jcenter()
    }

    sourceCompatibility = 14
    targetCompatibility = 14

    jacoco {
        toolVersion = '0.8.5'
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    javadoc {
        options.addBooleanOption('html5', true)
        options.links 'https://docs.oracle.com/en/java/javase/14/docs/api/'
    }

    tasks.withType(JavaCompile).each {
        it.options.compilerArgs.add('--enable-preview')
    }

    lombok {
        config['lombok.toString.callSuper'] = "call"
        version = "1.18.12"
    }

    checkstyle {
        ignoreFailures = false
        maxWarnings = 0
    }

    test {
        useJUnitPlatform()

        jvmArgs(['--enable-preview'])

        reports {
            html.enabled = true
        }
    }

    dependencies {
        checkstyle 'com.puppycrawl.tools:checkstyle:8.30'

        annotationProcessor enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")
        implementation enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")
        testAnnotationProcessor enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")
        testImplementation enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        //https://github.com/openjdk/skara/pull/66
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        testImplementation 'org.assertj:assertj-core:3.14.0'
    }
}